# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    
    
    #- name: Build with Maven
     # run: mvn -B package --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
   # - name: Update dependency graph
    #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6


#    - uses: actions/checkout@v3
 #   - name: Build the Docker image
   #   run: docker build --file ./src/main/docker/Dockerfile --tag my-image-name:$(date +%s) 

   # - uses: actions/checkout@v3
    #- name: Checkout code
     # uses: actions/checkout@v2
    - name: Create mongo Docker container
      id: build_mongo_docker
      uses: DigiPie/mongo-action@v1.0.1
      with:
          image-version: latest
          port: 27017

    - name: Start Mosquitto container
      uses: docker://eclipse-mosquitto:1.6.12
    
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    
    - name: Stop containers
      run: |
        docker stop $(docker ps -q)
